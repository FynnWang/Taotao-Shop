第二天
一.框架整合 springmvc + spring + mybatis
二.创建数据库



3. 逆向工程
Mybatis的逆向工程，根据数据库表生成java代码

4. SSM框架整合
整合的思路:
4.1.1Dao层：使用mybatis框架，创建SqlMapConfig.xml(不需要配数据库连接，别名也不是一定要配)
创建一个applicationContext-dao.xml
1、配置数据源
2、需要让spring容器管理sqlsessionFactory,单例存在
3、把mapper的代理对象放到spring容器中。
(1)配一个接口一个实现类。
(2)配一个扫描包。

4.1.2Service层
1、事务管理
2、需要把service实现类的对象放到spring容器中管理

4.1.3表现层

1、配置注解驱动
2、配置视图解析器
3、需要扫描controller

4.1.4web.xml
1、spring容器的配置
2、springmvc前端控制器的配置
3、post乱码管理配置器

4.2框架整合
需要把配置文件放到taotao-manager-web工程下， 因为此工程为war工程，其他的工程只是一个jar包

4.2.1Mybatis整合

!!!为什么不能一次性把service、controller层一同扫描?
1.springmvc 与 spring 父子容器的关系
springmvc是子容器，包含Controller,可以访问父容器的对象。即子容器是可以将service注入到controller中来。外部访问controller则没有问题
spring是父容器，包括Dao,Service不能访问子容器的对象。如果将controller加载到service中，
则外部直接访问时访问springmvc容器，那么则找不到controller对象，则会报404。

所以如果在application-service中配置扫描所有的话，则是在spring容器中创建了controller对象。
那么外部的访问controller则不能访问得到，会报404错误。
但是可以再springmvc.xml中配置扫描所有包。

2.分开配置也有助于多整合，可以让spring整合到struts

3.事务不能配置到Controller中，因为事务是配置在spring中
所以事务是访问不到controller的，所以没有用
所以要配置到service层

4.2.2Service层
配置:
applicationContext-dao.xml 连接数据库，扫描mapper
applicationContext-service.xml 扫描@service
applicationContext-trans.xml 扫描事务@Transactional

4.2.3表现层








